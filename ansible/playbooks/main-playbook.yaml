---
- hosts: all
  gather_facts: true
  tasks:

    - name: install sudo
      apt:
        name: sudo
        state: present
        install_recommends: true
        autoclean: true
        allow_unauthenticated: true
        force_apt_get: true
      become: true
      become_user: root

    - name: Ensure group "docker" exists
      ansible.builtin.group:
        name: docker
        state: present
      become: true
      become_user: root

    - name: create the admin user account
      user:
        name: "{{ admin_user }}"
        shell: /bin/bash
        groups: [sudo, adm, docker]
        append: false
        create_home: true
        generate_ssh_key: false
        password: "{{ admin_password | password_hash('sha512') }}"
        state: present
        system: false
        force: true
      become: true
      become_user: root

    - name: Add admin user to the sudoers group
      copy:
        dest: "/etc/sudoers.d/admin"
        content: "{{ admin_user }}  ALL=(ALL)  NOPASSWD: ALL"
      become: true
      become_user: root

    - name: Run the equivalent of "apt-get update"
      ansible.builtin.apt:
        update_cache: true
        autoclean: true
        allow_unauthenticated: true
        force_apt_get: true
      become: true
      become_user: root

    - name: Run the equivalent of "apt-get upgrade"
      apt:
        upgrade: true
        update_cache: true
        cache_valid_time: 0
      become: true
      become_user: root

    - name: install ssh-import-id
      apt:
        name: ssh-import-id
        state: present
        install_recommends: true
        autoclean: true
        allow_unauthenticated: true
        force_apt_get: true
      become: true
      become_user: root

    - name: Deploy SSH Key to the user
      ansible.builtin.shell: /usr/bin/ssh-import-id-gh cloudymax jessebot
      become: true
      become_user: "{{ admin_user }}"

    - name: install apt packages
      apt:
        name: sudo, curl, git, wget, unzip, python3-pip
        state: present
        install_recommends: true
        autoclean: true
        allow_unauthenticated: true
        force_apt_get: true
      become: true
      become_user: root

    - name: download prometheus node exporter
      ansible.builtin.get_url:
        url: https://github.com/prometheus/node_exporter/releases/download/v1.4.0/node_exporter-1.4.0.linux-amd64.tar.gz
        dest: /node_exporter-1.4.0.linux-amd64.tar.gz
      become: true
      become_user: root

    - name: extract prometheus archive
      ansible.builtin.unarchive:
        src: /node_exporter-1.4.0.linux-amd64.tar.gz
        dest: /
        remote_src: true
      become: true
      become_user: root

    - name: Move prometheus node exporter binary to final location
      command: mv /node_exporter-1.4.0.linux-amd64/node_exporter /usr/local/bin/node_exporter
      become: true
      become_user: root

    - name: Copy prometheus node exporter service file to client
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/small-hack/smol-vps-config/main/ansible/configs/node_exporter.service
        dest: /etc/systemd/system/node_exporter.service
      become: true
      become_user: root

    - name: reload systemd daemon since we added a new service file
      ansible.builtin.shell: systemctl daemon-reload
      become: true
      become_user: root

    - name: enable node exporter service
      ansible.builtin.shell: systemctl enable node_exporter.service
      become: true
      become_user: root

    - name: start node exporter service
      ansible.builtin.shell: systemctl start node_exporter.service
      become: true
      become_user: root
